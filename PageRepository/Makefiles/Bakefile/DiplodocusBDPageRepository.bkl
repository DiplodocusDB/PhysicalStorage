ishikopath = envvar("ISHIKO");
import $(ishikopath)/ThirdPartyGlue/Include/Ishiko/Boost.bkl;
import $(ishikopath)/Errors/Include/Ishiko/Errors.bkl;

toolsets = gnu vs2015 vs2013;

gnu.makefile = ../GNUmakefile/GNUmakefile;
vs2015.solutionfile = ../VC14/DiplodocusDBPageRepository.sln;
vs2013.solutionfile = ../VC12/DiplodocusDBPageRepository.sln;
diplodocusdbpath = envvar("DIPLODOCUSDB");
import $(diplodocusdbpath)/Core/Include/DiplodocusDB/DiplodocusDBCore.bkl;

library DiplodocusDBPageRepository : DiplodocusDBCore, IshikoErrors, Boost
{
    archs = x86 x86_64;
   
    includedirs += ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository;

    if ($(toolset) == gnu)
    {
        cxx-compiler-options = "-std=c++11";
        outputdir = ../../../Lib;
    }

    if ($(toolset) != gnu)
    {
        outputdir = ../../../Lib/$(arch);
    }

    if ($(config) == Debug)
    {
        basename = DiplodocusDBPageRepository-d;
    }

    headers
    {
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository.h

        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/StartOfPageRecordData.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/EndOfPageRecordData.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/Page.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/PageStartMarker.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/PageEndMarker.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/PageCache.h
        ../../../Include/DiplodocusDB/PhysicalStorage/PageRepository/PageFileRepository.h
    }

    sources
    {
        ../../Source/StartOfPageRecordData.cpp
        ../../Source/EndOfPageRecordData.cpp
        ../../Source/Page.cpp
        ../../Source/PageStartMarker.cpp
        ../../Source/PageEndMarker.cpp
        ../../Source/PageCache.cpp
        ../../Source/PageFileRepository.cpp
    }
}
